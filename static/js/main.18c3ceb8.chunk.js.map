{"version":3,"sources":["Components/Tip.js","App.js","reportWebVitals.js","index.js"],"names":["Tip","props","useState","amount","setAmount","service","setService","customer","setCustomer","tip","setTip","totalCustomer","setTotalCustomer","tip1","setTip1","id","className","Form","type","placeholder","onChange","event","target","value","selected","disabled","hidden","required","Button","length","variant","onClick","AddCustomerName","AddTip","customername","map","ele","Alert","Heading","totaltip","reduce","prev","next","Table","App","setCustomerName","link","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18c3ceb8.chunk.js","sourcesContent":["import React ,{useState} from 'react'\r\nimport { Form, Button, Table, Alert } from 'react-bootstrap';\r\nimport './Tip.css';\r\n\r\n\r\nexport default function Tip(props) {\r\n    const [amount, setAmount] = useState(0)\r\n    const [service, setService] = useState(0)\r\n    const [customer, setCustomer] = useState(\"\")\r\n    const [tip, setTip] = useState([])\r\n    const [totalCustomer, setTotalCustomer] = useState(0)\r\n    const [tip1, setTip1] = useState([0])\r\n  \r\n    const handler = (event) => {\r\n      setAmount(event.target.value)\r\n    }\r\n    const handler1 = (event) => {\r\n      setService(event.target.value)\r\n    }\r\n    const handler2 = (event) => {\r\n      setCustomer(event.target.value)\r\n  \r\n      setTip(amount * service)\r\n    }\r\n    const getData = () => {\r\n  \r\n      props.AddCustomerName(`${customer} Offering a Tip Of - Rs.  ${tip}`)\r\n      props.AddTip(tip)\r\n    }\r\n    const getData1 = () => {\r\n      setTip1(`${props.totaltip.reduce((prev, next) => prev + next)}`)\r\n      setTotalCustomer(`${props.customername.length}`)\r\n    }\r\n    return (\r\n        <div id=\"all\">\r\n            <div className=\"container\">\r\n     <Form>\r\n        <div className=\"wrapper\">\r\n        <h1>&#8377; Tip Calculator &#8377;</h1>\r\n          <p>Bill Amount</p>\r\n          <input type=\"text\" id=\"BillAmount\"\r\n            placeholder=\"Amount to be paid\" onChange={handler} /> ₹\r\n          <p>How was the service?</p>\r\n          <select id=\"Services\" onChange={handler1}>\r\n            <option selected disabled hidden>\r\n              Select\r\n            </option>\r\n            <option value=\"0.20\">20% - Excellent</option>\r\n            <option value=\"0.15\">15% - Good</option>\r\n            <option value=\"0.10\">10% - Bad</option>\r\n            <option value=\"0.05\">5% - Worst</option>\r\n          </select>\r\n          <p>Customer Name</p>\r\n          <input type=\"text\" id=\"TotalPersons\"\r\n            placeholder=\"Enter Your Name\" onChange={handler2} required/> \r\n        </div>\r\n            <br/>\r\n          <Button disabled={customer.length === 0} id=\"btnCustomer\" variant=\"warning\" onClick={getData}>Add Customer</Button>\r\n        {/* <div className=\"tip\">\r\n          <p>Tip Amount</p>\r\n          <span id=\"total\">0</span> ₹\r\n          <span id=\"each\">each</span>\r\n        </div> */}\r\n        <div className=\"container\">\r\n          <p>Customer List</p>\r\n          {\r\n            props.customername.map(ele => (\r\n              <Alert>\r\n                <Alert.Heading>{ele}</Alert.Heading>\r\n              </Alert>\r\n            ))\r\n          }\r\n\r\n        </div>\r\n       <br></br>\r\n       <hr></hr>\r\n       <br></br>\r\n       <div className=\"container\">\r\n        <Button disabled={customer.length === 0} variant=\"warning\" onClick={getData1} id=\"btnTip\" >Calculate Tip amd Customer</Button>\r\n       </div>\r\n       <br></br>\r\n       <div className=\"container\" id=\"table\">\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>Total Customer</th>\r\n              <th>Total Tip</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              <tr>\r\n                <td>{totalCustomer}</td>\r\n                <td>\r\n                  Rs.{tip1}\r\n                </td>\r\n              </tr>\r\n            }\r\n          </tbody>\r\n        </Table>\r\n       </div>\r\n</Form>\r\n    </div >\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport './App.css';\r\nimport Tip from './Components/Tip';\r\n\r\n\r\n\r\nfunction App() {\r\n  const [customername, setCustomerName] = useState([\r\n  ])\r\n  const [totaltip, setTip] = useState([\r\n    0\r\n  ])\r\n  const AddCustomerName = (link) => {\r\n    setCustomerName([...customername, link])\r\n  }\r\n  const AddTip = (link) => {\r\n    setTip([...totaltip, link])\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <Tip customername={customername} AddCustomerName={AddCustomerName} totaltip={totaltip} AddTip={AddTip}/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}